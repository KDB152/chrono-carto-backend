// Script de test pour la fonctionnalit√© d'acc√®s aux quizzes
const API_BASE = 'http://localhost:3001';

async function testQuizAccess() {
  console.log('üß™ Test de la fonctionnalit√© d\'acc√®s aux quizzes...\n');

  try {
    // 1. Cr√©er un quiz avec des groupes cibles sp√©cifiques
    console.log('1Ô∏è‚É£ Cr√©ation d\'un quiz avec groupes cibles...');
    const createResponse = await fetch(`${API_BASE}/quizzes`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        title: 'Quiz Histoire - Terminale Groupe 1 & 2',
        description: 'Quiz sur la R√©volution fran√ßaise pour Terminale Groupe 1 et 2 uniquement',
        subject: 'Histoire',
        level: 'Terminale',
        duration: 45,
        pass_score: 12,
        status: 'Publi√©',
        tags: ['r√©volution', 'france', 'histoire'],
        is_time_limited: true,
        allow_retake: false,
        show_results: true,
        randomize_questions: true,
        target_groups: ['Terminale groupe 1', 'Terminale groupe 2']
      })
    });

    if (!createResponse.ok) {
      throw new Error(`Erreur cr√©ation: ${createResponse.status} ${createResponse.statusText}`);
    }

    const createdQuiz = await createResponse.json();
    console.log('‚úÖ Quiz cr√©√©:', createdQuiz.title);
    console.log('üìä Groupes cibles:', createdQuiz.target_groups);
    console.log('');

    // 2. Tester l'acc√®s par groupe
    console.log('2Ô∏è‚É£ Test d\'acc√®s par groupe...');
    
    // Groupe autoris√©
    const canTake1 = await fetch(`${API_BASE}/quizzes/${createdQuiz.id}/can-take/Terminale%20groupe%201`);
    const result1 = await canTake1.json();
    console.log('üë§ Terminale groupe 1:', result1 ? '‚úÖ Autoris√©' : '‚ùå Non autoris√©');

    // Groupe non autoris√©
    const canTake2 = await fetch(`${API_BASE}/quizzes/${createdQuiz.id}/can-take/Terminale%20groupe%204`);
    const result2 = await canTake2.json();
    console.log('üë§ Terminale groupe 4:', result2 ? '‚úÖ Autoris√©' : '‚ùå Non autoris√©');

    // 3. Tester l'acc√®s par ID d'√©tudiant (simulation)
    console.log('\n3Ô∏è‚É£ Test d\'acc√®s par ID d\'√©tudiant...');
    
    // Note: Vous devrez avoir des √©tudiants dans votre base de donn√©es
    // avec les bons class_level pour tester cette fonctionnalit√©
    
    // 4. R√©cup√©rer les statistiques d'acc√®s
    console.log('\n4Ô∏è‚É£ Statistiques d\'acc√®s du quiz...');
    const statsResponse = await fetch(`${API_BASE}/quizzes/${createdQuiz.id}/access-stats`);
    if (statsResponse.ok) {
      const stats = await statsResponse.json();
      console.log('üìä Statistiques d\'acc√®s:', stats);
    } else {
      console.log('‚ùå Impossible de r√©cup√©rer les statistiques');
    }

    // 5. Modifier les groupes cibles
    console.log('\n5Ô∏è‚É£ Modification des groupes cibles...');
    const updateResponse = await fetch(`${API_BASE}/quizzes/${createdQuiz.id}`, {
      method: 'PATCH',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        target_groups: ['Terminale groupe 1', 'Terminale groupe 3']
      })
    });

    if (updateResponse.ok) {
      const updatedQuiz = await updateResponse.json();
      console.log('‚úÖ Quiz modifi√©');
      console.log('üìä Nouveaux groupes cibles:', updatedQuiz.target_groups);
    } else {
      console.log('‚ùå Erreur lors de la modification');
    }

    // 6. Tester la nouvelle configuration
    console.log('\n6Ô∏è‚É£ Test de la nouvelle configuration...');
    
    const canTake3 = await fetch(`${API_BASE}/quizzes/${createdQuiz.id}/can-take/Terminale%20groupe%202`);
    const result3 = await canTake3.json();
    console.log('üë§ Terminale groupe 2 (apr√®s modification):', result3 ? '‚úÖ Autoris√©' : '‚ùå Non autoris√©');

    const canTake4 = await fetch(`${API_BASE}/quizzes/${createdQuiz.id}/can-take/Terminale%20groupe%203`);
    const result4 = await canTake4.json();
    console.log('üë§ Terminale groupe 3 (apr√®s modification):', result4 ? '‚úÖ Autoris√©' : '‚ùå Non autoris√©');

    // 7. Nettoyer - Supprimer le quiz de test
    console.log('\n7Ô∏è‚É£ Nettoyage...');
    await fetch(`${API_BASE}/quizzes/${createdQuiz.id}`, { method: 'DELETE' });
    console.log('üóëÔ∏è Quiz de test supprim√©');

    console.log('\nüéâ Test termin√© avec succ√®s !');
    console.log('\nüìã R√©sum√© des fonctionnalit√©s test√©es:');
    console.log('   ‚úÖ Cr√©ation de quiz avec groupes cibles');
    console.log('   ‚úÖ V√©rification d\'acc√®s par groupe');
    console.log('   ‚úÖ Modification des groupes cibles');
    console.log('   ‚úÖ Statistiques d\'acc√®s');
    console.log('   ‚úÖ Restriction d\'acc√®s automatique');

  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error);
  }
}

// Ex√©cuter le test
testQuizAccess();
